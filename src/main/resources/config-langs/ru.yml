# Russian config translation for BreweryX
# Author: Vutka1

config:
  language: |
    Какой файл локализации использовать [en]
    Available types: en (English), de (German), es (Spanish), fr (French), it (Italian), ru (Russian), zh (Chinese), uk (Ukrainian)
  updateCheck: |
    Проверять ли обновления. Укажите, какой сервис хотите для этого использовать, или отключите.
    Доступные варианты: GitHub, Snapshots, Spigot, None [GitHub]
  autosave: "Период автосохранения данных (в минутах) [10]"
  pluginPrefix: |
    Префикс плагина, используемый в сообщениях.
    Как и большинство текстов плагина, поддерживает HEX-цвета (пример: & FFFFFF - белый цвет) ['&2[BreweryX]&f ']
  debug: "Отображать ли отладочные сообщения в логах и в консоли [false]"
  storage:
    header: "-- Хранение данных --"
    type: |
      Определяет, какой метод хранения данных использовать [FlatFile]
      Возможные варианты: FlatFile, MySQL, SQLite, MongoDB
      Подробнее о вариантах - в гайде по ссылке вверху файла
    database: "Название базы данных. Если база данных - файл, то таким будет название этого файла [brewery-data]"
  enableHome: "Должен ли игрок просыпаться на своей точке дома при заходе на сервер после сильной пьянки [true]"
  homeType: |
    Тип телепортации домой
    bed = Игрок просто появится у своей кровати-спавнпоинта
    'cmd: home' = /home будет выполнено от имени игрока. Необходимы соответствующие разрешения у игрока, а также отсутствие задержки у команды!
    'cmd: spawn' = /spawn будет выполнено от имени игрока.
    'cmd: choUgodno' = /choUgodno будет выполнено от имени игрока.
    Дефолтное значение: ['cmd: home']
  enableWake: |
    Должен ли игрок просыпаться в одной из "точек пробуждения" при заходе на сервер после пьянки (точки пробуждения настраиваются админом через '/brew Wakeup add') [true]
    Из всех точек пробуждения выбираются две случайные, после чего игрок появляется на ближайшей из них
  enableLoginDisallow: "Должен ли игрок несколько раз пытаться залогиниться, если он пьян [true]"
  enableKickOnOverdrink: "Должен ли игрок терять сознание (кикаться с сервера), если достиг максимума опьянения [false]"
  enablePuke: |
    Должен ли игрок блевать при высоком опьянении (выбрасываемые предметы указываются ниже) [true]
    Выблёвываемый предмет не может быть собран и остается на земле, пока не задеспавнится
    (В целом импакт на производительность очень низкий)
  pukeItem: |
    Какими предметами должен блевать игрок [Soul_Sand]
    Можно ввести несколько предметов, например: [Sould_sand, Slime_block, Dirt]
  pukeDespawntime: |
    Время, в секундах, после которого исчезает блевотина [60]
    Если время деспавна выброшенных предметов (ванильно  300с) изменится в spigot.yml, то pukeDespawntime тоже изменится!
    Прим.пер.: Для крупных (100+ онлайна) серверов советую уменьшить значение до 30,
    Иначе большое количество предметов может вызвать падение FPS у игроков
  stumblePercent: "Насколько сильно игрока шатает (в процентах) в зависимости от того, сколько он выпил. Значения выше 100, или же ноль, тоже допустимы [100]"
  showStatusOnDrink: "Отображать ли игроку его опьянение после того, как он выпьет, или съест drainItem [true]"
  drainItems: "Список отрезвляющей пищи и то, сколько процентов опьянения она снимает. [Предмет/Количество]"
  enableCauldronParticles: |
    Отображать ли частицы над котлом, если в нем что-то варится [true]
    Изменяемый цвет частиц (настраивается ниже) может быть полезной подсказкой для тайминга рецептов.
  minimalParticles: "Нужно ли минимизировать количество частиц над котлом [false]"
  craft-enableSealingTable: |
    Включены ли крафт и использование стола для запечатывания (2 бутылки поверх 4 досок в верстаке) [true, true]
    Запечатывание используется, чтобы заблокировать дальнейшее настаивание или дистилляцию для напитка,
    благодаря чему его можно будет безопасно хранить в бочках
  sealingTableBlock: |
    Обычно в качестве стола для запечатывания используется модифицированный блок Коптильной печи, но вы можете это изменить
    ВАЖНО: Блок должен быть контейнером, то есть блоком, способным держать в себе предметы (например, SMOKER, CHEST, BLAST_FURNACE).
  alwaysShowQuality: |
    Всегда ли отображать 1-5 звезд, в зависимости от качества, в описании напитка.
    Если false, то звезды будут видны только при настаивании или дистилляции [true]
  alwaysShowAlc: |
    Всегда ли отображать процент алкоголя в напитке. Если false, то алкогольность будет отображаться только в зельеварке [false]
    Запечатанные напитки не будут отображать процент алкоголя вне зависимости от этой настройки
  alwaysShowAlcIndicator: |
    Предупреждать ли о том, что напиток алкогольный, добавляя в описание предмета надпись "Алкогольное" [true]
    Запечатанные напитки тоже будут иметь эту надпись, но не будут отображать процент алкоголя
  showBrewer: "Отображать ли имя того, кто сварил напиток. [false]"
  showRuinedBrewHints: |
    Показывать ли подсказки в описании неудавшихся напитков [false]
    К примеру:
    - "Слишком долго варилось..."
    - "Один из ингредиентов по вкусу не тот..."
    Учтите, что подсказки основаны на ближайшем, исходя из ингредиентов, правильном рецепте и поэтому могут быть неточными.
  requireKeywordOnSigns: "Обязательно ли на табличке наличие слова barrel (или бочка), чтобы бочка могла быть создана [true]"
  ageInMCBarrels: "Включено ли настаивание в ванильных майнкрафтовских бочках [true], и сколько бутылок можно в них положить [6]"
  agingYearDuration: "Сколько длится 1 год (в минутах) во время настаивания напитков. 1 игровой день = 20 минут [20]"
  newBarrelTypeAlgorithm: |
    Использовать ли новый алгоритм для высчитывания качества типа дерева и смены типа дерева, если напиток настаивался в нескольких разных бочках. [False]
    False - старое поведение Brewery(X).
    True - группирует похожие типы бочек (напр., дуб и бледный дуб) более интуитивно, справедливо влияя на качество.
  commandAliases: |
    Синонимы для основной команды '/breweryx'. Для принятия изменений требуется полный рестарт сервера (Список) [brewery, brew]
  enableEncode: |
    Использованные ингредиенты и прочие данные сохраняются прямо в напиток посредством custom_data в предмете.
    Чтобы защитить эти данные от читеров, их можно зашифровать.
    Это быстрый процесс, который не позволит игрокам узнать, какой у напитка рецепт, как только этот напиток попадет к ним в руки.

    Важно: для использования тех же предметов-напитков/мира на другом сервере, в его конфиге должен быть указан такой же encodeKey.
    Если используете напитки на нескольких серверах (BungeeCord, Velocity, прочее), укажите общую базу данных внизу, в 'storage'

    Включайте это, если хотите не позволить читерить рецепты. Но тогда не делитесь напитками посредством скачивания карты/схематик построек с напитками [false]
  useOtherPlugins: |
    -- Совместимость --

    Должны ли бочки учитывать приваты разных плагинов [true]
  useVirtualChestPerms: |
    Использовать ли "виртуальный сундук" при открывании бочек.
    Могут возникнуть проблемы при использовании античита.
    Используйте с плагином 'Residence' и прочими плагинами, которые не просчитывают все варианты в playerInteractEvent
  useLogBlock: "Логгировать ли бочки в LogBlock [true]"
  useOffhandForCauldron: "Можно ли добавлять в котел также вещи из второй руки [false]"
  loadDataAsync: |
    Эта опция больше не используется и в будущих версиях будет удалена.
    Сейчас BreweryX всегда загружает данные асинхронно, за исключением запуска и остановки сервера.
  hangoverDays: "Количество дней, в течение которых данные об опьянении игрока остаются в памяти после его выхода, чтобы при заходе наложить похмелье, тпшнуть его домой, и пр. [7]"
  onlyAllowBrewsInBarrels: "Разрешить ли класть в бочки только бутылки с напитками [false]"
  colorInBarrels-Brewer: "Окрашивать ли информацию об этапах приготовления, в зависимости от качества, внутри бочек и зельеварок [true, true]"
  openLargeBarrelEverywhere: "Можно ли открыть большую бочку нажатием на любой ее блок, а не только табличку/забор, чтобы открыть ее. Всегда включено для маленьких бочек [true]"
  barrelInvSizes: |
    Сколько рядов должно быть в инвентаре каждого типа бочек [3,1]
    Должно быть целым числом от 1 до 6 (ограничение Minecraft / GUI)
    (Для применения изменений требуется перезапуск сервера)
  brewHopperDump: "Можно ли опустошить бутылку с напитком нажатием ею по воронке [true]"
  enableChatDistortion: |
    -- Коверкание чата --

    Включить ли коверкание сообщений пьяных игроков в чате.
    Степень искажения зависит от того, насколько пьян игрок
    Ниже есть настройки того, как именно и что именно и с каким шансом искажать.
  logRealChat: "Сохранять ли в логи сервера оригинальные сообщения игрока, до того как они были изменены [false]"
  distortCommands: "Текст после данных команд будет исковеркан, но сами команды - нет (список) [- /gl]"
  distortSignText: "Искажать ли текст, написанный на табличках во время опьянения [false]"
  distortBypass: |
    Если сообщение "обёрнуто" в приведенные ниже знаки, то оно не будет исковеркано (разделяйте начальный и конечный знаки при помощи запятой) (список) [- '[,]']
      Пример:| Vutka1: *маты-перематы*
      Такое сообщение не будет исковеркано.
  words: |
    words: Слова и буквы, которые будут заменены во время пьяного письма.
    Этот список обрабатывается в порядке от начала до конца. Написанные сообщения коверкаются так же.

    replace: Слово/буква/выражение, которое будет заменено
      (особые варианты: "-space": заменить пробел, "-random": вписать в случайном месте, "-all": заменить сообщение целиком, "-start": добавить в начало сообщения, "-end": добавить в конец сообщения)
    to: на что заменить вышеуказанное слово/букву/выражение
    pre: какие слова/буквы/выражения должны быть перед указанным в 'replace:', чтобы можно было заменить на 'to:' (разделять при помощи ",")
    match:  true = одно из слов в 'pre:' должно быть перед целевым словом, чтобы коверкание сработало,  false = наоборот, т.е. слов из 'pre:' быть не должно, чтобы коверкание сработало.
    alcohol: 1-100 минимальное опьянение, необходимое для того, чтобы данное коверкание сработало
    percentage: шанс того, что данное коверкание произойдет
  useOtherFiles: |
    В этом файле тоже можно указывать Кастомные предметы, Рецепты или Ингредиенты для котла (Недовары), но рекомендуется использовать для этого их соответствующие файлы.
    ВАЖНО: Кастом-итемы/Рецепты/Недовары, указанные тут, имеют меньший приоритет по сравнению с указанными в подходящих для этого файлах! (Например, при двух рецептах с одинаковыми названиями)
    Если вы обновляетесь с более старой версии, или с оригинального Brewery, то ваши прошлые Кастом-итемы/Рецепты/Недовары также будут в этом файле (их всё равно лучше перенести в соответствующие файлы)





recipesFile:
  header: |
    -- Рецепты напитков--

    Удобный и локализованный гайд на этот раздел можно найти по ссылке - https://brewery.lumamc.net/ru/guide/recipies/

    enabled: true/false - позволяет выключить напиток, не удаляя его из файла

    name: Имя, ИЛИ три различных имени для плохого/среднего/хорошего качества напитка (Поддерживает цвет: &6 или hex - &#123123)
      пример: name: 'Плохое пиво/Среднее пиво/&6&lПИЗДАТОЕ ПИВО'

    ingredients: 'ID/Количество'
      https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
      Вещи из других плагинов вписывать с префиксом: 'plugin:id/кол-во' (Сейчас поддерживаются Brewery, Garden (BreweryX Garden Addon), Oraxen, ItemsAdder, Nexo, Slimefun).
      Например: '- itemsadder:grape/5'
      Кастом итемы (из custom-items.yml) вписываются просто по их ID, без префикса (Например, '- vinograd/10')
      Также можно использовать одни напитки в качестве ингредиентов для других. Формат выглядит вот так: 'brewery:ID/число'
      Например: '- brewery:wheatbeer/1'

    cookingtime: Время, в минутах, которое ингредиенты должны вариться в котле.

    distillruns: Сколько кругов дистилляции на зельеварке напиток должен пройти.

    distilltime: Сколько секунд занимает один круг дистилляции (Время по умолчанию - 40 сек. Дефолтное время для ванильных зелий - 20 сек)

    wood: Из какого дерева должна быть бочка:
      0=Любое 1=Береза 2=Дуб 3=Тропическое 4=Ель
      5=Акация 6=Темный дуб 7=Багровое 8=Искаженное 9=Мангровое
      10=Вишневое 11=Бамбуковое 12=Резная Медь 13=Бледный Дуб
        Вместо номера можно также указывать название или ID.
        Возможные варианты:
        wood: 13
        wood: pale_oak
        wood: pale oak
      Если включено настаивание в ванильных майнкрафтовских бочках, то они считаются за дубовые.

    age: Сколько "лет" напиток должен настояться в бочке.

    color: Цвет готового зелья
      Возможные цвета: DARK_RED, RED, BRIGHT_RED, ORANGE, YELLOW, PINK, PURPLE, BLUE, CYAN, WATER, TEAL, OLIVE, GREEN, LIME, BLACK, GREY, BRIGHT_GREY, WHITE
      Или RGB-цвета (color: 99FF33)

    difficulty: Сложность напитка. Чем выше - тем более точно нужно будет следовать рецепту, чтобы напиток получился 5-звездным

    alcohol: Количество опьянения, которое добавляется при употреблении (до 100, поддерживаются отрицательные значения)

    lore: Описание готового напитка (Поддерживает цвет: &6, или &#AABBCC)
      при помощи плюсов можно указать разное описание для разных кровней качества: + bad, ++ normal, +++ good.
      - +++ Крутейшее пойло.
      - ++ Ну такое...
      - + Эх щас бы сливок на соски себе намазать...

    servercommands: Команды, выполняемые СЕРВЕРОМ при употреблении (Плейсхолдеры: %player_name%  %quality%)
      Как и описания, поддерживает различные уровни качества: + bad, ++ normal, +++ good.
      - +++ op %player_name%
      - ++ money give %player_name% 10
      - + essentials:heal %player_name%
     Команды могут быть отложены, если добавить "/ <число>s" в конце:
      - op Jsinco / 3s
     Вместо s (секунды) можно использовать m или h (минуты или часы)

    playercommands: Команды, выполняемые ОТ ЛИЦА ИГРОКА при употреблении (Плейсхолдеры: %player_name%  %quality%)
      Как и описания, поддерживает различные уровни качества: + bad, ++ normal, +++ good.
      - +++ spawn
      - ++ home
      - + suicide
     Команды могут быть отложены, если добавить "/ <число>s" в конце:
      - op Jsinco / 3s
     Вместо s (секунды) можно использовать m или h (минуты или часы)

    drinkmessage: Сообщение в чате, которое показывается игроку при употреблении.

    drinktitle: Сообщение на экране, которое показывается при употреблении

    glint: true/false - должен ли готовый напиток сиять как зачарованный предмет

    customModelData: номер Custom Model Data.
      Можно указать один, а можно сразу для всех уровней качества:
      customModelData: 1
      customModelData: 1/2/3

    effects: ID/уровень/длительность. Эффект, который накладывается при выпивании.
      Айдишники эффектов: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionEffectType.html
      ВАЖНО!!! Если ваша версия ниже 1.20.5, то некоторые эффекты у вас будут иметь другие ID, а не те, что по ссылке выше. Таков костыль баккита, существовавший до 1.20.5:
      Мгновенный урон - HARM, лечение - HEAL, тошнота - CONFUSION, медлительность - SLOW, прыгучесть - JUMP, спешка - FAST_DIGGING, сила - INCREASE_DAMAGE.
      Уровень и длительность эффекта поддерживают разброс в зависимости от качества приготовления при помощи "-",
      например: 'SPEED/1-2/30-40' = Скорость I на 30 сек. при худшем качестве и Скорость II на 40 сек. при лучшем качестве.
      Разброс может быть и в обратную сторону: 'POISON/3-1/20-5' = меньшее отравление при повышении качества.
      Максимальная длительность - 1638 секунд. Мгновенным эффектам, по типу Лечения, необязательно указывать длительность.



cauldronFile:
  header: |
    -- Ингредиенты для котла --
    (я зову этот раздел недовары)

    Раздел определяет, какие ингредиенты принимаются в котел даже если для них нет никакого рецепта, и какое из них получится базовое зелье (недовар)
    Если ингредиент уже указан в каком-либо рецепте в разделе рецептов (или же в кастомных ингредиентах), то тогда его необязательно вписывать сюда,
    кроме случаев, когда вы хотите изменить дизайн недовара для тех или иных ингредиентов.

    name: Название недовара (Поддерживает цвета: &6, &#AABBCC )

    ingredients: ингредиенты и их число(опицонально), из которых получается недовар. Пример: Potato/3
      Используйте /brew ItemName с предметом в руке, чтобы получить его айдишник для конфига
      (как правило, соответствует майнкрафтовскому айдишнику, отличаться могут у предметов из других плагинов, поддержка которых есть в BreweryX)

    color: цвет зелья-недовара. Дефолтное значение - CYAN.
      Возможные значения: DARK_RED, RED, BRIGHT_RED, ORANGE, YELLOW, PINK, PURPLE, BLUE, CYAN, WATER, TEAL, OLIVE, GREEN, LIME, BLACK, GREY, BRIGHT_GREY, WHITE
      Или RGB-цвета (hex: например, '99FF33') (обязательно в '')

    cookParticles:
      Цвет частиц над котлом и время, в которое эти частицы меняют цвет
      Например, если у нас указано RED/8 и 'ffffff/18', то через 8 минут после добавления ингредиентов частицы над котлом (изначально голубые) станут красными и останутся такими до тех пор,
      пока не пройдет 18 минут с момента добавления ингредиентов. В этот момент они быстро из красного цвета перетекут в белый (ffffff - белый цвет),
      и через несколько секунд, если больше никакие цвета не указаны, станут серыми.
      Подсказка: если хотите, чтобы цвет был постоянно, а не перетекал в серый, то придется указать в конце прошлый цвет второй раз с большим количеством минут.
      Например: BLUE/3, RED/10, RED/60
      Синий через три минуты, красный через 10 и красный-серый через 60. Поскольку вряд ли кто-то будет что-то варить 60 минут,
      можно сказать, что красный цвет останется навсегда, пусть на самом деле и не навсегда =)

    lore: Описание, которое будет у зелья-недовара. Поддерживает цвета: &a или rgb &#AABBCC

    customModelData: Custom Model Data, которая будет наложена на зелье-недовар


customItemsFile:
  header: |
    -- Кастомные предметы --
    Здесь можно указать "айдишники" для кастомных ингредиентов и настроить условия, при которых они считаются таковыми
    Прим.пер.: ни один из параметров не является обязательным, но хотя бы один должен присутствовать
    Прим.пер.№2: в этой категории вы лишь "указываете" плагину, при каких условиях какой-то предмет считается таким-то кастом итемом при попадании в котел.
    А над тем, как именно получать предметы с такими параметрами, вы должны подумать сами, способ их получения игроками - целиком на вас.

    Возможные параметры кастом итемов:
    matchAny:
      если true, то достаточно, чтобы значение ЛЮБОГО из остальных параметров предмета (материал, название, лор, customModelData)
      совпадало с указанным в кастом итеме для того, чтобы кидаемый в котел предмет засчитался за соответствующий кастом итем.
      если false, то необходимо, чтобы значение КАЖДОГО из остальных параметров предмета (материал, название, лор, customModelData)
      совпадало с указанным в кастом итеме для того, чтобы кидаемый в котел предмет засчитался за соответствующий кастом итем.

    material: Майнкрафтовский айдишник кастом итема (например, potato)

    name: Какое название должно быть у предмета (если указан цвет (например, &6 или &#<hex>), то тогда необходимо, чтобы цвет в предмете тоже совпадал с указанным для засчитывания в качестве кастом итема)

    lore: Какой лор должен быть у предмета. Поддерживает цвета так же, как и name (↑)

    customModelData: Какой номер Custom Model Data, который должен быть у предмета. Вписывать в формате списка (см. пример)

# Unfortunately no support to have this in the new config yet - Jsinco
    # удалять то, что сверху.
    # после удаления раскомментировать строки ниже:
    # -  replace: с
    # to: ш
    # percentage: 30
    # alcohol: 25

    # -  replace: с
    # to: сс
    # percentage: 30
    # alcohol: 25

    # -  replace: ч
    # to: ш
    # alcohol: 10
    # percentage: 10

    # -  replace: х
    # to: хх
    # percentage: 50
    # alcohol: 20

    # -  replace: th
    # to: thl
    # percentage: 30
    # alcohol: 30

    # -  replace: ш
    # to: щ
    # percentage: 40
    # alcohol: 35

    # -  replace: у
    # to: уф
    # percentage: 25
    # alcohol: 20

    # -  replace: у
    # to: уу
    # percentage: 50
    # alcohol: 15

    # -  replace: е
    # to: ее
    # percentage: 30
    # alcohol: 15

    # -  replace: ты
    # to: тыыэ
    # percentage: 30
    # alcohol: 25

    # -  replace: во
    # to: уо
    # percentage: 30
    # alcohol: 25

    # -  replace: это
    # to: этт
    # percentage: 20
    # alcohol: 40

    # -  replace: п
    # to: б
    # percentage: 20

    # -  replace: п
    # to: б
    # percentage: 30
    # alcohol: 60

    # -  replace: вверх
    # to: ввьиерх
    # percentage: 60
    # alcohol: 25

    # -  replace: о
    # to: оо
    # percentage: 20
    # alcohol: 15

    # -  replace: э
    # to: ЭЭэЭЭэ
    # percentage: 30
    # alcohol: 45

    # -  replace: б
    # to: бб
    # percentage: 50
    # alcohol: 40

    # -  replace: б
    # to: п
    # percentage: 20
    # alcohol: 30

    # -  replace: '!!!'
    # to: '!!!111!!!1!1!'
    # pre: '!'
    # match: false
    # percentage: 20
    # alcohol: 70

    # -  replace: '!'
    # to: '!!1'
    # percentage: 50
    # alcohol: 10

    # -  replace: пьяный
    # to: ппбьянй
    # pre: are
    # match: false
    # percentage: 60
    # alcohol: 65

    # -  replace: ходить
    # to: хходитьть
    # percentage: 70
    # alcohol: 30

    # -  replace: уходи
    # to: уухходии
    # percentage: 70
    # alcohol: 30

    # -  replace: идти
    # to: иийдьти
    # percentage: 70
    # alcohol: 30

    # -  replace: втф
    # to: чзхХх
    # percentage: 30
    # alcohol: 40

    # -  replace: лол
    # to: лЛлол
    # percentage: 60
    # alcohol: 10

    # -  replace: афк
    # to: ааыаффк
    # percentage: 50
    # alcohol: 30

    # -  replace: write
    # to: wreitt
    # pre: you can,you can still,you can not
    # match: false
    # percentage: 80
    # alcohol: 50

    # -  replace: drink
    # to: booze
    # percentage: 80
    # alcohol: 70

    # -  replace: '?'
    # to: '?7'
    # percentage: 50
    # alcohol: 20

    # -  replace: c
    # to: ' '
    # alcohol: 10
    # percentage: 15

    # -  replace: т
    # to: тт
    # alcohol: 10
    # percentage: 20

    # -  replace: -space
    # to: ''
    # pre: х,г,у
    # match: true
    # alcohol: 10
    # percentage: 15

    # -  replace: -space
    # to: ''
    # percentage: 25
    # alcohol: 25

    # -  replace: -space
    # to: ''
    # percentage: 20
    # alcohol: 10

    # -  replace: -start
    # to: Уфхх
    # percentage: 10
    # alcohol: 50

    # -  replace: -start
    # to: Хх
    # percentage: 10
    # alcohol: 50

    # -  replace: -random
    # to: й
    # percentage: 10

    # -  replace: -random
    # to: бьб
    # percentage: 10
    # alcohol: 80

    # -  replace: -random
    # to: буээ
    # percentage: 20
    # alcohol: 85

    # -  replace: -random
    # to: уфх
    # percentage: 20
    # alcohol: 80

    # -  replace: -random
    # to: ' '
    # percentage: 70
    # alcohol: 70

    # -  replace: -random
    # to: ' '
    # percentage: 35
    # alcohol: 40

    # -  replace: -random
    # to: ' '
    # percentage: 30
    # alcohol: 30

    # -  replace: -random
    # to: ' '
    # percentage: 25
    # alcohol: 20

    # -  replace: -end
    # to: '!'
    # percentage: 30
    # alcohol: 30

    # -  replace: -random
    # to: ' *ик* '
    # percentage: 70
    # alcohol: 70

    # -  replace: -random
    # to: '*ик*'
    # percentage: 30
    # alcohol: 30

    # -  replace: -random
    # to: ' *ик* '
    # percentage: 15
    # alcohol: 25

    # -  replace: -space
    # to: ' *ик* '
    # percentage: 5
    # alcohol: 20

    # -  replace: -end
    # to: ' *ик*'
    # percentage: 60
    # alcohol: 50

    # -  replace: -random
    # to: '*рыг*'
    # percentage: 15
    # alcohol: 40


    # -  replace: бля
    # to: бБляать
    # percentage: 30
    # alcohol: 30

    # -  replace: бля
    # to: ББЛЯАЯТЬ
    # percentage: 35
    # alcohol: 65

    # -  replace: сук
    # to: сСсука
    # percentage: 25
    # alcohol: 20

    # -  replace: х
    # to: хх
    # percentage: 30
    # alcohol: 20

    # -  replace: -all
    # to: '*Ухх бл*'
    # percentage: 5
    # alcohol: 80

    # -  replace: -all
    # to: '*Этиловое пение*'
    # percentage: 5
    # alcohol: 85

    # -  replace: -all
    # to: 'Ттыы м*ик*ьеня ув.. уважжаешь??'
    # percentage: 5
    # alcohol: 80

    # -  replace: -all
    # to: 'Хьихихи)'
    # percentage: 5
    # alcohol: 75

    # -  replace: -all
    # to: 'Хехьехее)'
    # percentage: 5
    # alcohol: 75

    # -  replace: -all
    # to: '*пьяный поросячий визг*'
    # percentage: 4
    # alcohol: 90

    # -  replace: -all
    # to: '*рыг*'
    # percentage: 6
    # alcohol: 80
# Ой, конец файла. Вот такие пироги!
