# Chinese config translation for BreweryX
# Author: Mr-Wang635

config:
  language: |
    语言文件 [en]
    Available types: en (English), de (German), es (Spanish), fr (French), it (Italian), ru (Russian), zh (Chinese), uk (Ukrainian)
  updateCheck: |
    Should BreweryX check for updates? Specify which service you'd like to use for update checking or disable it.
    Options available: GitHub, Snapshots, Spigot, None [GitHub]
  autosave: "自动保存时间间隔, 单位:分钟 [10]"
  pluginPrefix: "用于此插件的消息前缀[Brewery]"
  debug: "是否在日志中显示调试信息 [false]"
  storage:
    header: "-- Storage Settings --"
    type: |
      What type of storage to use [FLATFILE]
      Available types: FlatFile, MySQL, SQLite, MongoDB
    database: "The name of the database. When the database is a file, this will be the name of the file. [brewery-data]"
  enableHome: "喝高了的下线玩家会在家里醒来(需要/home等功能支持)[true]"
  homeType: |
    上述功能的回家方式: ['cmd: home']
    bed = 会在床边醒来
    'cmd: home' = 强制让玩家执行/home. 需要设置好玩家权限, 以避免传送出现延迟.
    'cmd: spawn' = 强制让玩家执行/spawn.
    'cmd: 指定命令' = 强制让玩家执行该命令, 例如'cmd: warp xxx'等.
  enableWake: |
    玩家醉酒以后下线一段时间醒来是否会在某些苏醒处醒来(苏醒处需要管理员通过'/brew Wakeup add'进行设定).
    玩家将会在最近的两个苏醒处之一醒来.[true]
  enableLoginDisallow: "醉酒的玩家是否需要反复尝试登录才能进入服务器.[true]"
  enableKickOnOverdrink: "饮酒过量的玩家是否会晕倒一小段时间(即被暂时踢出服务器).[false]"
  enablePuke: |
    醉酒程度过高的玩家是否会呕吐(呕吐物在下面定义).[true]
    物品无法被捡起, 直至消失.
  pukeItem: |
    呕吐物[Soul_Sand]
    Can be list of items such as [Soul_sand, Slime_block, Dirt]
  pukeDespawntime: |
    呕吐物消失的时间, 单位为秒(MC默认为300 = 5分钟) [60]
    如果spigot.yml中的物品消失时间被变更, 此处也会变更
  stumblePercent: "玩家跌倒程度取决于饮酒量，设置范围可以是0或超过100 [100]"
  showStatusOnDrink: "玩家饮用饮品或吃掉解酒物时，显示其醉酒程度 [true]"
  drainItems: |
    解酒物/解酒强度
    降低玩家一定程度的醉酒程度, 解酒强度为百分数
  enableCauldronParticles: |
    当炼药锅中有配料和热源时，显示炼药埚上方的颗粒效果[true]
    颗粒颜色的变化有助于掌握某些配方的时机
  minimalParticles: "是否将炼药埚颗粒效果减少到最低挡位 [false]"
  craft-enableSealingTable: |
    是否允许制造密封台         ------>  玻璃瓶 玻璃瓶
    (2个玻璃瓶在4块木板上方)   ------>   木板   木板
    [true, true]             ------>   木板   木板
  sealingTableBlock: |
    By default, Brewery uses Smoker as a Sealing Table, this option allows you to change it
    IMPORTANT: It needs to be a container - meaning a block that can store items (e.g., SMOKER, CHEST, BLAST_FURNACE).
  alwaysShowQuality: "是否始终根据物品质量显示1-5颗星，如果设置为否，则仅在酿造过程中显示星星 [true]"
  alwaysShowAlc: "是否始终在物品上显示酒精含量，如果设置为否，则只在酿造台上显示 [false]"
  showBrewer: "如果我们应该显示谁制作了这杯饮料 [false]"
  requireKeywordOnSigns: "只有在放置的标志包含“酒桶”一词（或其它语言的翻译）时才创建酒桶 [true]"
  ageInMCBarrels: "MC自带的桶内可以存放多少饮品 [6]"
  agingYearDuration: "陈酿饮品时“年份”的持续时间（分钟）[20]"
  commandAliases: |
    Aliases for the '/breweryx' command. Requires a server restart to take effect. (list) [brewery, brew]
  enableEncode: |
    使用的原料和其他酿造数据会被保存在所有酿酒物品中
    为了防止被修改后的客户端读取饮品的确切原料，数据可以被编码/搅乱
    这是一个快速过程，可以阻止玩家在获得酿造品后破解配方
    唯一的缺点是：饮品只能在具有相同encodeKey的另一服务器上使用
    当在多个（BungeeCord）服务器上使用酿造品时，请在’storage’下方定义一个共享数据库
    如果你想要让配方作弊更困难，但不想通过世界下载、蓝图或其他方式共享任何酿造品，请启用此选项 [false]
  useOtherPlugins: |
    -- 插件兼容性 --

    启用检查其他插件（如果已安装）的木桶权限 [true]
    插件 'Landlord' 和 'Protection Stones' 使用 WorldGuard 标志
    'ClaimChunk' 是原生支持的
  useVirtualChestPerms: |
    在打开木桶时，使用虚拟箱子来与所有其他保护插件进行交互检查
    这可能会使反作弊插件产生混淆，但在其他方面是一个很好的使用方法
    请将此方法用于 'Residence' 插件，以及任何其他未在 PlayerInteractEvent 中涵盖所有情况的插件
  useLogBlock: "启用将木桶库存信息记录到 LogBlock [true]"
  useOffhandForCauldron: "是否也应该将副手中的物品添加到炼药锅中 [false]"
  loadDataAsync: |
    This option no longer does anything anymore, and will be removed in future releases of BreweryX.
    BreweryX will load data asynchronously always, with the exception of server startup and shutdown.
  hangoverDays: "玩家下线后，醉酒数据在内存中保留的天数，以施加宿醉等后续效果 [7]"
  onlyAllowBrewsInBarrels: "If only Brewery drinks can be put into barrels [false]"
  colorInBarrels-Brewer: |
    饮品上是否显示带颜色的提示, 颜色由执行步骤的正误决定
    是否在陈酿酒桶内显示颜色 [true]

    是否在酿造台内显示颜色 [true]
  openLargeBarrelEverywhere: |
    大型木桶是否可通过点击其任一方块来开启，不仅仅限于龙头或标志
    对于小型木桶，这一功能始终有效 [true]
  barrelInvSizes: |
    每种类型的桶的库存应有多少行 [3,1]
    必须是 1 到 6 之间的整数（Minecraft / GUI 限制）
    (需要重启服务器才能使更改生效)
  brewHopperDump: "允许通过将饮品倒入漏斗来丢弃，同时保留玻璃瓶 [true]"
  enableChatDistortion: |
    -- 聊天口胡设置 --

    当玩家醉酒时，是否使聊天内容出现口胡，使其呈现出醉酒书写的样子
    聊天内容的口胡程度与玩家的醉酒程度成正比
    以下是关于聊天内容变化的具体设置

    打开聊天口胡功能[true]
  logRealChat: "在聊天内容被口胡前，记录玩家实际输入的聊天内容到服务器日志 [false]"
  distortCommands: "醉酒时，特定命令后的文本将出现口胡（命令列表） [- /gl]"
  distortSignText: "醉酒时，是否扭曲告示牌上的文本 [false]"
  distortBypass: |
    使用特定字母包围聊天内容，以避免聊天口胡效果（以逗号作为分隔符）（字母列表） [- '[,]']
    聊天示例：我~喝~醉了 *但是这里面的话不会变哦!*
  words: |
    words[单词]: 当玩家醉酒时聊天中将被改变的单词和字母
    将按照从前往后的顺序进行处理，并且按照这个顺序改变书写的句子

    replace: 要替换的单词或字母
    特殊类型：
    "-space": 替换空格     "-random": 插入到随机位置     "-all": 所有内容
    "-start": 在开始处     "-end": 在结束处

    to: 用什么替换它

    pre: 在目标单词之前的单词和字母
    用 "," 分隔

    match:
    true = 目标单词前必须有一个'pre'单词
    false = 目标单词前不允许有'pre'单词

    alcohol[酒精度]: 1-100
    在醉酒程度达到这个值后，这个单词将被替换

    percentage[概率]: 单词替换的概率（百分比）
  useOtherFiles: |
    You may declare custom items, recipes, and cauldron ingredients here too, optionally, but using their respective files is recommended.
    IMPORTANT: custom items, recipes, and cauldron ingredients declared in their proper files will take priority over those declared here! (e.g. 2 recipes with the same name)





recipesFile:
  header: |
    -- 饮品配方列表 --

    Proper guide for this section can be found in our wiki here - https://brewery.lumamc.net/guide/recipies/

    enabled: true if the recipe should be enabled, false if it should be disabled

    name[名称]：
    可以为 劣质/普通/优质 这三种质量的饮品命名
    (可插入样式代码, 如:&6)

    ingredients[配方列表]:
    格式为"材料名称/数量"
    手中持有物品的时候, 可以使用/brew ItemName来获取其物品id, 便于在配方中使用
    (由于Bukkit不再支持物品ID, 物品ID已被弃用, 使用材料名称是唯一支持的做法)
    材料名称列表详见此处: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html [打不开需要挂梯子进行浏览]
    带有 'plugin:id' 标识的插件项目（目前支持 ExoticGarden, Slimefun, MMOItems 和 Brewery 插件）
    或者一个在上面定义的自定义物品

    cookingtime[料理时间]:
    原料需要在炼药锅内烹制发酵的时间, 单位为现实分钟

    distillruns[料理次数]:
    饮品需要在酿造台上需要蒸馏的次数 [0=无需蒸馏]

    distilltime[蒸馏时间]:
    每次蒸馏所需要耗费的时间 [0=默认值为40秒] [MC默认则为20秒]

    wood[木头]: 木桶所需要的木质
    0=任意     1=白桦木   2=橡木   3=丛林木   4=云杉木   5=金合欢木
    6=深色橡木  7=诡异菌  8=扭曲菌  9=红树木  10=樱花木   11=竹子   (12=切割铜)
    MC的木桶默认为橡木桶

    age[年龄]:
    饮品需要在木桶中熟成所需要的时间(单位为MC天数) [0=无需陈酿]

    color[颜色]: 炼药锅产出基底的颜色，默认设置为青色
    可用的颜色:
    DARK_RED[深红色]      RED[红色]       BRIGHT_RED[鲜红色]    ORANGE[橙色]
    YELLOW[黄色]          PINK[粉色]      PURPLE[紫色]          BLUE[蓝色]
    CYAN[青色]            WATER[浅蓝色]   TEAL[蓝绿色]          OLIVE[橄榄绿色]
    GREEN[绿色]           LIME[鲜绿色]    BLACK[黑色]           GREY[灰色]
    BRIGHT_GREY[亮灰色]   WHITE[白色]
    或者使用RGB颜色    [十六进制格式：例如 ‘99FF33’，需用引号括起来]
    又或者使用HTML颜色 [在互联网上搜索“HTML颜色”来获取更多颜色代码]

    difficulty[酿造难度]:
    由1到10 难度依次递增：
    1 = 不需要非常精确的操作就可以制出优质饮品
    10 = 需要非常精确的操作才可以制出优质饮品

    alcohol[酒精含量]:
    完美饮品中的绝对酒精含量，范围是 0-100（将直接作用于玩家，100意味着玩家会昏迷）

    lore[描述文本]: 酿造完成后的物品描述文本列表(可用的格式化代码：例如 &6)
    根据物品品质，可以在行首添加特定的lore标记，如 + 表示差, ++ 表示普通, +++ 表示好

    servercommands[服务器命令]:
    饮用饮品时，服务器将执行的命令列表
    可以使用变量 %player_name% 和 %quality%
    playercommands[玩家命令]:
    饮用饮品时，玩家将执行的命令列表
    可以使用变量 %player_name% 和 %quality%
    这两个都可以根据品质添加特定命令，使用 + 表示差, ++ 表示普通, +++ 表示好，添加到每行命令的前面

    drinkmessage[饮用消息]:
    玩家饮用饮品时接收的聊天信息

    drinktitle[饮用标题]:
    玩家饮用饮品时屏幕上显示的标题

    glint[附魔闪烁]:
    表示物品是否应该显示魔法光泽 [true/false]

    customModelData[自定义物品模型]:
    用于向物品添加自定义纹理的数字标签
    可以为一个饮品设置，或者为每个饮品的不同品质分别设置，用 / 分隔

    effects[药效列表]: 饮用时产生的药水效果、等级和持续时间的列表
    持续时间单位为秒
    等级或持续时间可用"-"表示，例如 'SPEED/1-2/30-40' 表示最差情况为等级 1 持续 30 秒，最佳情况为等级 2 持续 40 秒
    等级或持续时间也可逆向设置，例如 'POISON/3-1/20-5' 表示最差情况为等级 3 持续 20 秒，最佳情况为等级 1 持续 5 秒
    最长药水效果持续时间为 1638 秒 瞬间类药水效果无需指定持续时间
    可用药水效果列表: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionEffectType.html [打不开需要挂梯子进行浏览]



cauldronFile:
  header: |
    -- 炼药锅中的饮品基底 --
    哪些原料可以被炼药锅接受，以及这些原料所能生成的饮品基底
    只有当你需要为饮品基底设定一个特定的名称或颜色时，才需要在此处进行设置

    name[名称]：
    炼药锅产出基底的名称（支持格式化代码，例如：&6）

    ingredients[成分]：‘材料/数量’的列表
    当你手持物品时，使用命令 /brew 物品名称 来获取该物品的材料数据，以便在配方中使用
    （请注意，Bukkit不再支持使用物品ID，必须使用材料名称）
    材料列表请参考：https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html [打不开需要挂梯子进行浏览]

    color[颜色]: 炼药锅产出基底的颜色，默认设置为青色
    可用的颜色:
    DARK_RED[深红色]      RED[红色]       BRIGHT_RED[鲜红色]    ORANGE[橙色]
    YELLOW[黄色]          PINK[粉色]      PURPLE[紫色]          BLUE[蓝色]
    CYAN[青色]            WATER[浅蓝色]   TEAL[蓝绿色]          OLIVE[橄榄绿色]
    GREEN[绿色]           LIME[鲜绿色]    BLACK[黑色]           GREY[灰色]
    BRIGHT_GREY[亮灰色]   WHITE[白色]
    或者使用RGB颜色    [十六进制格式：例如 ‘99FF33’，需用引号括起来]
    又或者使用HTML颜色 [在互联网上搜索“HTML颜色”来获取更多颜色代码]

    cookParticles[烹饪粒子]:
    炼药锅在不同阶段时上方粒子的颜色
    指定每种颜色及其出现的具体分钟数，例如在第8分钟显示一种颜色，然后在第18分钟逐渐变为另一种颜色
    以列表形式，每种颜色以名称或RGB格式表示，具体见上文，格式为‘Color/Minute’[颜色/分钟]
    如果列表中有多个颜色，最终将渐变到列表中的最后一个颜色
    如果列表中只有一个颜色，则最终将渐变到灰色

    lore[描述文本]: 基底上额外文本的列表（支持格式化代码，例如：&6）

    customModelData[自定义物品模型]:
    自定义物品模型标签，这些数字可用于为物品添加特定的自定义纹理


customItemsFile:
  header: |
    -- 定义自定义物品 --
    定义后的ID可以在配方中使用

    matchAny[匹配任何]: 如果其中一个信息匹配就足够了，则为true
    material[材料]: 物品必须是什么材质

    name[姓名]:
    物品必须是什么名称（可使用格式化代码，例如&e）

    lore[描述文本]:
    物品描述中必须包含的内容

    customModelData[自定义物品模型]:
    物品在列表中应具有的模型数据编号


# Unfortunately no support to have this in the new config yet - Jsinco
#words:
#  - replace: "!!!"
#    to: "!!!111!!!1111!1!"
#    pre: "!"
#    match: false
#    percentage: 20
#    alcohol: 70
#
#  - replace: "！！！"
#    to: "!!!111!!!1111!1!"
#    pre: "!"
#    match: false
#    percentage: 20
#    alcohol: 70
#  - replace: "!"
#    to: "!!"
#    pre: "!"
#    match: false
#    percentage: 90
#
#  - replace: "?"
#    to: "????"
#    pre: "?"
#    match: false
#    percentage: 80
#    alcohol: 40
#
#  - replace: "？"
#    to: "????"
#    pre: "?"
#    match: false
#    percentage: 80
#    alcohol: 40
#
#  - replace: ","
#    to: ""
#    pre: h,g,w
#    match: true
#    alcohol: 10
#
#  - replace: "，"
#    to: ""
#    pre: h,g,w
#    match: true
#    alcohol: 10
#
#  - replace: "."
#    to: ""
#    percentage: 30
#    alcohol: 35
#
#  - replace: "。"
#    to: ""
#    percentage: 10
#
#  - replace: -start
#    to: 呃
#    percentage: 15
#    alcohol: 50
#
#  - replace: -start
#    to: 哼嗯
#    percentage: 10
#    alcohol: 50
#
#  - replace: -random
#    to: 噜
#    percentage: 10
#
#  - replace: -random
#    to: 啦
#    percentage: 10
#    alcohol: 50
#
#  - replace: -random
#    to: 咕
#    percentage: 20
#    alcohol: 80
#
#  - replace: -random
#    to: 咯
#    percentage: 40
#    alcohol: 85
#
#  - replace: -random
#    to: 嘎
#    percentage: 40
#    alcohol: 80
#
#  - replace: -random
#    to: " "
#    percentage: 100
#    alcohol: 70
#
#  - replace: -end
#    to: "!"
#    percentage: 40
#    alcohol: 30
#
#  - replace: -random
#    to: "*嗝*"
#    percentage: 80
#    alcohol: 70
#
#  - replace: -random
#    to: "*嗝*"
#    percentage: 15
#    alcohol: 40
#
#  - replace: -space
#    to: "*嗝*"
#    percentage: 5
#    alcohol: 20
#
#  - replace: -end
#    to: "*嗝*"
#    percentage: 70
#    alcohol: 50
#
#  - replace: -all
#    to: "*嗝儿————*"
#    percentage: 3
#    alcohol: 60
#
#  - replace: -all
#    to: "*嗝儿————*"
#    percentage: 6
#    alcohol: 80
